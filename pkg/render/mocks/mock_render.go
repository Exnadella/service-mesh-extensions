// Code generated by MockGen. DO NOT EDIT.
// Source: ./renderer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	kuberesource "github.com/solo-io/go-utils/installutils/kuberesource"
	v1 "github.com/solo-io/service-mesh-hub/api/v1"
	render "github.com/solo-io/service-mesh-hub/pkg/render"
)

// MockManifestRenderer is a mock of ManifestRenderer interface
type MockManifestRenderer struct {
	ctrl     *gomock.Controller
	recorder *MockManifestRendererMockRecorder
}

// MockManifestRendererMockRecorder is the mock recorder for MockManifestRenderer
type MockManifestRendererMockRecorder struct {
	mock *MockManifestRenderer
}

// NewMockManifestRenderer creates a new mock instance
func NewMockManifestRenderer(ctrl *gomock.Controller) *MockManifestRenderer {
	mock := &MockManifestRenderer{ctrl: ctrl}
	mock.recorder = &MockManifestRendererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManifestRenderer) EXPECT() *MockManifestRendererMockRecorder {
	return m.recorder
}

// ComputeResourcesForApplication mocks base method
func (m *MockManifestRenderer) ComputeResourcesForApplication(ctx context.Context, inputs render.ValuesInputs, spec *v1.VersionedApplicationSpec) (kuberesource.UnstructuredResources, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComputeResourcesForApplication", ctx, inputs, spec)
	ret0, _ := ret[0].(kuberesource.UnstructuredResources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComputeResourcesForApplication indicates an expected call of ComputeResourcesForApplication
func (mr *MockManifestRendererMockRecorder) ComputeResourcesForApplication(ctx, inputs, spec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComputeResourcesForApplication", reflect.TypeOf((*MockManifestRenderer)(nil).ComputeResourcesForApplication), ctx, inputs, spec)
}
