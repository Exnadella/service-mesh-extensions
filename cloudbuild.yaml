steps:

# clones Gloo so it can be setup & tested
# All steps after this must set working directory to use the cloned Gloo source

# $COMMIT_SHA is a default gcloud env var, to run via cloudbuild submit use:
# gcloud builds submit --substitutions COMMIT_SHA=abc ./
- name: 'gcr.io/$PROJECT_ID/prepare-go-workspace:0.3.0'
  args:
  - "--repo-name"
  - "$REPO_NAME"
  - "--repo-sha"
  - "$COMMIT_SHA"
  - "--repo-output-dir"
  - "."
  env:
  - 'GIT_SSH_CONFIG=FALSE'
  id: 'prepare-workspace'


- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p /go/pkg && cd /go/pkg && gsutil cat gs://$PROJECT_ID-cache/service-mesh-hub/service-mesh-hub-mod.tar.gz | tar -xzf -']
  dir: &dir '/workspace/service-mesh-hub'
  id: 'untar-mod-cache'

- name: 'gcr.io/$PROJECT_ID/go-mod-ginkgo:0.2.6'
  args: ['-r', '-p', '-failFast', '-trace', '-progress', '-race', '-compilers=4',  '-noColor', '-randomizeAllSpecs', '-randomizeSuites']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/service-mesh-hub'
  - 'TAGGED_VERSION=$TAG_NAME'
  secretEnv: ["GITHUB_TOKEN"]
  dir: *dir
  id: 'test'

secrets:
- kmsKeyName: projects/solo-public/locations/global/keyRings/build/cryptoKeys/build-key
  secretEnv:
    GITHUB_TOKEN: CiQABlzmSYYiveU0gTxGH2139eaBUedjV3vNCxQmJU+nRPlfQ/YSUQCCPGSGzbGp49fwDYuefAx9V94b8mivdp9AqB7zQAa07VtGJmrGdg9ZuhKGFrrgqxwABE0LLVNHyngCSHYSYMH8Vn/mRtT7wQuEHBlKVGtqPw==

timeout: 3000s
tags: ['service-mesh-hub']
options:
  machineType: 'N1_HIGHCPU_32'
